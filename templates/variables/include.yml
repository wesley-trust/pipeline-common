parameters:
  - name: variableRoot
    type: string
    default: "vars"
  - name: environmentName
    type: string
    default: ""
  - name: regionName
    type: string
    default: ""
  - name: includeCommon
    type: boolean
    default: true
  - name: includeRegion
    type: boolean
    default: true
  - name: includeEnv
    type: boolean
    default: true
  - name: includeEnvRegion
    type: boolean
    default: true

variables:
  # Common/shared variables
  - ${{ if eq(parameters.includeCommon, true) }}:
      - template: ${{ format('{0}/common.yml', parameters.variableRoot) }}@self

  # Region-only variables (applies across all environments)
  - ${{ if and(eq(parameters.includeRegion, true), ne(parameters.regionName, '')) }}:
      - template: ${{ format('{0}/regions/{1}.yml', parameters.variableRoot, parameters.regionName) }}@self

  # Per-environment variables
  - ${{ if and(eq(parameters.includeEnv, true), ne(parameters.environmentName, '')) }}:
      - template: ${{ format('{0}/environments/{1}/common.yml', parameters.variableRoot, parameters.environmentName) }}@self

  # Per-environment per-region variables
  - ${{ if and(eq(parameters.includeEnvRegion, true), ne(parameters.environmentName, ''), ne(parameters.regionName, '')) }}:
      - template: ${{ format('{0}/environments/{1}/regions/{2}.yml', parameters.variableRoot, parameters.environmentName, parameters.regionName) }}@self

  # Dynamic test suffix support (opt-in via testsDeploymentSuffixEnabled in variable layers)
  - name: runSuffix
    value: $[ coalesce(variables['Build.BuildId'], '0') ]
  - name: baseDeploymentVersion
    value: ${{ variables.deploymentVersion }}
  - name: applyDynamicSuffix
    value: $[ and(
      eq(coalesce(variables['testsDeploymentSuffixEnabled'], 'false'), 'true'),
      contains(variables['Build.DefinitionName'], variables['testsDeploymentSuffixPipelineFilter'])
      ) ]

  - name: dynamicSuffixPrefix
    value: $[ replace(
      replace(
      format('{0}', variables['applyDynamicSuffix']),
      'True',
      format('{0}-', variables['runSuffix'])
      ),
      'False',
      ''
      ) ]
  - name: deploymentVersion
    value: $[ format('{0}{1}', variables['dynamicSuffixPrefix'], variables['baseDeploymentVersion']) ]
