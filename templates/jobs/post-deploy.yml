# Post-deploy hook. Runs scripts from the common scripts directory after deployments.
parameters:
  - name: name
    type: string
    default: post_deploy
  - name: displayName
    type: string
    default: Post-Deploy
  - name: environmentName
    type: string
    default: ""
  - name: region
    type: string
    default: ""
  - name: variableFiles
    type: object
    default: {}
  - name: variableRoot
    type: string
    default: "vars"
  - name: scripts
    type: object
    default: []
  - name: useLockedSources
    type: boolean
    default: true
  - name: lockedArtifactName
    type: string
    default: source-snapshot
  - name: lockedSourcePath
    type: string
    default: $(Pipeline.Workspace)/locked-sources
  - name: pool
    type: object
    default: {}
  - name: dependsOn
    type: object
    default: []
  - name: additionalRepositories
    type: object
    default: []
  - name: keyVault
    type: object
    default: {}
  - name: variableIncludeCommon
    type: boolean
    default: true
  - name: variableIncludeEnv
    type: boolean
    default: true
  - name: variableIncludeEnvRegion
    type: boolean
    default: true
  - name: variableIncludeRegionOnly
    type: boolean
    default: true

jobs:
  - job: ${{ parameters.name }}
    displayName: ${{ parameters.displayName }}
    dependsOn: ${{ parameters.dependsOn }}
    variables:
      - template: variables/include.yml@PipelineCommon
        parameters:
          variableRoot: ${{ parameters.variableRoot }}
          environmentName: ${{ parameters.environmentName }}
          regionName: ${{ parameters.region }}
          includeCommon: ${{ parameters.variableIncludeCommon }}
          includeRegionOnly: ${{ parameters.variableIncludeRegionOnly }}
          includeEnv: ${{ parameters.variableIncludeEnv }}
          includeEnvRegion: ${{ parameters.variableIncludeEnvRegion }}

    steps:
      # Use locked sources for RTL integrity
      - ${{ if eq(parameters.useLockedSources, true) }}:
          - checkout: none
          - checkout: PipelineCommon
          - template: steps/download-artifact.yml@PipelineCommon
            parameters:
              displayName: Download source snapshot
              artifactName: ${{ parameters.lockedArtifactName }}
              downloadPath: ${{ parameters.lockedSourcePath }}
      - ${{ if eq(parameters.useLockedSources, false) }}:
          - checkout: self
          - checkout: PipelineCommon
      - ${{ if gt(length(parameters.additionalRepositories), 0) }}:
          - ${{ each repo in parameters.additionalRepositories }}:
              - checkout: ${{ repo.alias }}

      - ${{ each s in parameters.scripts }}:
          - template: steps/powershell.yml@PipelineCommon
            parameters:
              displayName: Post (script)
              repoAlias: PipelineCommon
              script: ${{ s.script }}
              arguments: ${{ s.arguments }}

      # Optional Key Vault secret import for post-deploy (if configured)
      - ${{ if ne(coalesce(parameters.keyVault.name, ''), '') }}:
          - template: steps/import-keyvault-secrets.yml@PipelineCommon
            parameters:
              displayName: Import Key Vault Secrets
              azureSubscription: ""
              keyVaultName: ${{ parameters.keyVault.name }}
              secretsFilter: ${{ coalesce(parameters.keyVault.secretsFilter, '*') }}
