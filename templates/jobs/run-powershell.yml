# Run general PowerShell script(s) from the common scripts directory
parameters:
  - name: name
    type: string
    default: ps
  - name: displayName
    type: string
    default: PowerShell
  - name: scriptPath
    type: string
    default: ''
  - name: scriptFullPath
    type: string
    default: ''
  - name: arguments
    type: string
    default: ''
  - name: pwsh
    type: boolean
    default: true
  - name: variableFiles
    type: object
    default: {}
  - name: variableRoot
    type: string
    default: 'vars'
  - name: environmentName
    type: string
    default: ''
  - name: region
    type: string
    default: ''
  - name: useLockedSources
    type: boolean
    default: true
  - name: lockedArtifactName
    type: string
    default: source-snapshot
  - name: lockedSourcePath
    type: string
    default: $(Pipeline.Workspace)/locked-sources
  - name: pool
    type: object
    default: {}
  - name: dependsOn
    type: object
    default: []
  - name: serviceConnection
    type: string
    default: ''
  - name: keyVault
    type: object
    default: {}
  - name: variableIncludeCommon
    type: boolean
    default: true
  - name: variableIncludeEnv
    type: boolean
    default: true
  - name: variableIncludeEnvRegion
    type: boolean
    default: true
  - name: variableIncludeRegionOnly
    type: boolean
    default: true
  - name: tokenReplaceEnabled
    type: boolean
    default: false
  - name: tokenTargetPatterns
    type: object
    default: []
  - name: tokenPrefix
    type: string
    default: '#{'
  - name: tokenSuffix
    type: string
    default: '}'
  - name: delayMinutes
    type: number
    default: 0

jobs:
  - job: ${{ parameters.name }}
    displayName: ${{ parameters.displayName }}
    dependsOn: ${{ parameters.dependsOn }}
    pool:
      ${{ if ne(coalesce(parameters.pool.name, ''), '') }}:
        name: ${{ parameters.pool.name }}
      ${{ if and(eq(coalesce(parameters.pool.name, ''), ''), ne(coalesce(parameters.pool.vmImage, ''), '')) }}:
        vmImage: ${{ parameters.pool.vmImage }}

    variables:
      - template: variables/include.yml@PipelineCommon
        parameters:
          variableRoot: ${{ parameters.variableRoot }}
          environmentName: ${{ parameters.environmentName }}
          regionName: ${{ parameters.region }}
          includeCommon: ${{ parameters.variableIncludeCommon }}
          includeRegionOnly: ${{ parameters.variableIncludeRegionOnly }}
          includeEnv: ${{ parameters.variableIncludeEnv }}
          includeEnvRegion: ${{ parameters.variableIncludeEnvRegion }}

    steps:
      # Use locked sources for RTL integrity
      - ${{ if eq(parameters.useLockedSources, true) }}:
        - checkout: none
        - checkout: PipelineCommon
        - template: steps/download-artifact.yml@PipelineCommon
          parameters:
            displayName: Download source snapshot
            artifactName: ${{ parameters.lockedArtifactName }}
            downloadPath: ${{ parameters.lockedSourcePath }}
      - ${{ if eq(parameters.useLockedSources, false) }}:
        - checkout: self
        - checkout: PipelineCommon
      - ${{ if gt(length(parameters.additionalRepositories), 0) }}:
        - ${{ each repo in parameters.additionalRepositories }}:
          - checkout: ${{ repo.alias }}

      # Optional Key Vault secret import
      - ${{ if ne(coalesce(parameters.keyVault.name, ''), '') }}:
        - template: steps/import-keyvault-secrets.yml@PipelineCommon
          parameters:
            displayName: Import Key Vault Secrets
            azureSubscription: ${{ parameters.serviceConnection }}
            keyVaultName: ${{ parameters.keyVault.name }}
            secretsFilter: ${{ coalesce(parameters.keyVault.secretsFilter, '*') }}

      # Optional token replacement for PowerShell action runs
      - ${{ if eq(parameters.tokenReplaceEnabled, true) }}:
        - ${{ if gt(length(parameters.tokenTargetPatterns), 0) }}:
          - ${{ each tokenPattern in parameters.tokenTargetPatterns }}:
            - template: steps/replace-tokens.yml@PipelineCommon
              parameters:
                displayName: PowerShell token replacement (${ tokenPattern })
                targetFiles: ${{ format('{0}/{1}', parameters.lockedSourcePath, tokenPattern) }}
                tokenPrefix: ${{ parameters.tokenPrefix }}
                tokenSuffix: ${{ parameters.tokenSuffix }}

      # Execute a script from the shared scripts directory
      # Optional non-blocking delay before execution
      - ${{ if gt(coalesce(parameters.delayMinutes, 0), 0) }}:
        - task: Delay@1
          inputs:
            delayForMinutes: ${{ parameters.delayMinutes }}

      - template: steps/powershell.yml@PipelineCommon
        parameters:
          displayName: Run Script
          repoAlias: PipelineCommon
          ${{ if ne(parameters.scriptFullPath, '') }}:
            scriptFullPath: ${{ parameters.scriptFullPath }}
          ${{ if eq(parameters.scriptFullPath, '') }}:
            script: ${{ parameters.scriptPath }}
          arguments: ${{ parameters.arguments }}
