parameters:
  - name: actionGroups
    type: object
    default: []
  - name: pool
    type: object
    default: {}
  - name: dependsOnStages
    type: object
    default: []
  - name: additionalRepositories
    type: object
    default: []
  - name: keyVault
    type: object
    default: {}
  - name: serviceConnection
    type: string
    default: ""
  - name: useLockedSources
    type: boolean
    default: true

jobs:
  - job: validate_terraform
    displayName: Validate Terraform
    dependsOn: ${{ parameters.dependsOnStages }}
    steps:
      - checkout: PipelineCommon
      - ${{ if eq(parameters.useLockedSources, true) }}:
          - template: ../../steps/download-artifact.yml@PipelineCommon
            parameters:
              displayName: Download source snapshot
              artifactName: source-snapshot
              downloadPath: $(Pipeline.Workspace)/s/self
      - ${{ if eq(parameters.useLockedSources, false) }}:
          - checkout: self
            path: s/self
      - ${{ if ne(coalesce(parameters.additionalRepositories, ''), '') }}:
          - ${{ each repo in parameters.additionalRepositories }}:
              - checkout: ${{ repo.alias }}
      - ${{ each actionGroup in parameters.actionGroups }}:
          - ${{ if and(eq(actionGroup.type, 'terraform'), ne(coalesce(actionGroup.actions, ''), '')) }}:
              - ${{ if ne(actionGroup.enabled, false) }}:
                  - ${{ each action in actionGroup.actions }}:
                      - ${{ if ne(action.enabled, false) }}:
                          - template: ../../steps/powershell.yml@PipelineCommon
                            parameters:
                              displayName: Terraform Lint/Validate (${{ coalesce(action.displayName, upper(replace(coalesce(action.name, 'TERRAFORM'), '_', ' '))) }})
                              repoAlias: PipelineCommon
                              script: terraform_lint.ps1
                              arguments: -WorkDir "$(Pipeline.Workspace)/s/self/${{ action.workingDirectory }}"
      - ${{ if ne(coalesce(parameters.keyVault.name, ''), '') }}:
          - template: ../../steps/import-keyvault-secrets.yml@PipelineCommon
            parameters:
              displayName: Import Key Vault Secrets
              azureSubscription: ${{ coalesce(variables[parameters.serviceConnection], parameters.serviceConnection) }}
              keyVaultName: ${{ parameters.keyVault.name }}
              secretsFilter: ${{ coalesce(parameters.keyVault.secretsFilter, '*') }}
